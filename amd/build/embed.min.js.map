{"version":3,"file":"embed.min.js","sources":["../src/embed.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny Sketch plugin Embed class for Moodle.\n *\n * @module      tiny_sketch/embed\n * @copyright   2023 Matt Davidson <davidso1@rose-hulman.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {get_string as getString} from 'core/str';\nimport * as ModalEvents from 'core/modal_events';\nimport Templates from 'core/templates';\nimport Modal from 'core/modal';\nimport Config from 'core/config';\n\nexport const SketchEmbed = class {\n    editor = null;\n    canShowFilePicker = false;\n\n    /**\n     * @property {Object} The names of the alignment options.\n     */\n    helpStrings = null;\n\n    /**\n     * @property {boolean} Indicate that the user is updating the media or not.\n     */\n    isUpdating = false;\n\n    constructor(editor) {\n        this.editor = editor;\n    }\n\n    async displayDialogue() {\n        Modal.create({\n            title: getString('sketchtitle', 'tiny_sketch'),\n            body: Templates.render('tiny_sketch/sketch_iframe', {\n                src: this.getIframeURL()\n            })\n        }).then(modal => {\n            modal.getRoot().on(ModalEvents.hidden, () => {\n                modal.destroy();\n            });\n\n            modal.getRoot().on(ModalEvents.shown, () => {\n                const modalElement = modal.getRoot().get(0);\n                const dialog = modalElement.querySelector('.modal-dialog');\n                const content = modalElement.querySelector('.modal-content');\n                const body = modalElement.querySelector('.modal-body');\n\n                dialog.style.cssText = \"max-width: unset;width:100%;height:100vh;margin:0;padding:0;\";\n                content.style.cssText = \"max-height: unset;height:100vh;\";\n                body.style.cssText = \"padding:0\";\n            });\n            modal.show();\n            return modal;\n        }).catch();\n    }\n\n    getIframeURL = () => {\n        const url = new URL(`${Config.wwwroot}/lib/editor/tiny/plugins/sketch/miniPaint/sketch.html`);\n        return url.toString();\n    };\n};\n"],"names":["constructor","editor","URL","Config","wwwroot","toString","create","title","body","Templates","render","src","this","getIframeURL","then","modal","getRoot","on","ModalEvents","hidden","destroy","shown","modalElement","get","dialog","querySelector","content","style","cssText","show","catch"],"mappings":"qkDA6B2B,MAcvBA,YAAYC,sCAbH,gDACW,sCAKN,yCAKD,wCAgCE,IACC,IAAIC,cAAOC,gBAAOC,kEACnBC,kBA/BNJ,OAASA,8CAIRK,OAAO,CACTC,OAAO,mBAAU,cAAe,eAChCC,KAAMC,mBAAUC,OAAO,4BAA6B,CAChDC,IAAKC,KAAKC,mBAEfC,MAAKC,QACJA,MAAMC,UAAUC,GAAGC,YAAYC,QAAQ,KACnCJ,MAAMK,aAGVL,MAAMC,UAAUC,GAAGC,YAAYG,OAAO,WAC5BC,aAAeP,MAAMC,UAAUO,IAAI,GACnCC,OAASF,aAAaG,cAAc,iBACpCC,QAAUJ,aAAaG,cAAc,kBACrCjB,KAAOc,aAAaG,cAAc,eAExCD,OAAOG,MAAMC,QAAU,+DACvBF,QAAQC,MAAMC,QAAU,kCACxBpB,KAAKmB,MAAMC,QAAU,eAEzBb,MAAMc,OACCd,SACRe"}